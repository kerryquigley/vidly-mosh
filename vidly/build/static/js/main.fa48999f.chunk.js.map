{"version":3,"sources":["components/common/pagination.jsx","components/common/listGRoup.jsx","servicez/fakeGenreService.jsx","servicez/fakeMovieService.jsx","utils/paginate.js","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/common/like.jsx","components/moviesTable.jsx","components/movies.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForm.jsx","components/customers.jsx","components/rentals.jsx","components/notFound.jsx","components/navBar.jsx","components/loginForm.jsx","components/registerForm.jsx","App.js","serviceWorker.js","index.js"],"names":["Pagination","props","itemsCount","pageSize","currentPage","onPageChange","console","log","pagesCount","Math","ceil","pages","_","range","className","map","page","key","onClick","href","ListGroup","items","textProperty","valueProperty","selectedItem","onItemSelect","item","defaultProps","genres","_id","name","getGenres","filter","g","movies","title","genre","numberInStock","dailyRentalRate","publishDate","liked","saveMovie","movie","movieInDb","find","m","genresAPI","genreId","Date","now","toString","push","paginate","pageNumber","startIndex","slice","take","value","TableHeader","raiseSort","path","sortColumn","order","onSort","renderSortIcon","column","this","columns","lable","Component","TableBody","renderCell","content","get","createKey","data","Table","Like","classes","aria-hidden","MoviesTable","Link","to","onLike","onDelete","state","handleDelete","setState","handleLike","index","indexOf","handlePageChange","handleGenreSelect","selectedGenre","handleSort","getPagedDate","allMovies","filtered","orderBy","totalCount","length","count","Input","type","label","error","onChange","htmlFor","id","Select","options","rest","option","Form","errors","validate","Joi","schema","abortEarly","details","message","validateProperty","obj","handleSubmit","e","preventDefault","doSubmit","handleChange","input","currentTarget","errorMessage","disabled","MovieForm","string","required","number","min","max","history","movieId","match","params","replace","mapToViewModel","onSubmit","renderInput","renderSelect","renderButton","Customers","Rentals","NotFound","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NavLink","LoginForm","username","password","RegisterForm","email","App","Fragment","role","Switch","Route","component","Movies","Redirect","from","exact","Boolean","window","location","hostname","ReactDOM","render","BrowserRouter","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"6TA6BeA,EAzBI,SAAAC,GAAU,IAClBC,EAAmDD,EAAnDC,WAAYC,EAAuCF,EAAvCE,SAAUC,EAA6BH,EAA7BG,YAAaC,EAAgBJ,EAAhBI,aAC1CC,QAAQC,IAAKH,GAEb,IAAMI,EAAaC,KAAKC,KAAKR,EAAaC,GAC1C,GAAmB,IAAfK,EAAkB,OAAO,KAC7B,IAAMG,EAAQC,IAAEC,MAAM,EAAGL,EAAa,GAEtC,OACA,6BACI,wBAAIM,UAAU,cACTH,EAAMI,KAAI,SAAAC,GAAI,OACf,wBAAIC,IAAKD,EAAMF,UAAYE,IAASZ,EAAc,mBAAqB,aACnE,uBAAGc,QAAS,kBAAMb,EAAaW,IAAOF,UAAU,YAAYK,KAAK,KAAKH,UCfhFI,EAAY,SAACnB,GAAW,IAClBoB,EAAmEpB,EAAnEoB,MAAOC,EAA4DrB,EAA5DqB,aAAcC,EAA8CtB,EAA9CsB,cAAeC,EAA+BvB,EAA/BuB,aAAcC,EAAiBxB,EAAjBwB,aAE1D,OAAQ,wBAAIX,UAAU,cACTO,EAAMN,KAAI,SAAAW,GAAI,OACX,wBAAIR,QAAS,kBAAMO,EAAaC,IAC5BT,IAAKS,EAAKH,GACVT,UAAYY,IAASF,EAAe,yBAA2B,mBAAoBE,EAAKJ,SAKhHF,EAAUO,aAAe,CACrBL,aAAc,OACdC,cAAe,OAGJH,QCnBFQ,EAAS,CAClB,CAACC,IAAK,2BAA4BC,KAAM,UACxC,CAACD,IAAK,2BAA4BC,KAAM,UACxC,CAACD,IAAK,2BAA4BC,KAAM,SACxC,CAACD,IAAK,2BAA4BC,KAAM,aAIrC,SAASC,IACZ,OAAOH,EAAOI,QAAO,SAAAC,GAAC,OAAIA,KCN9B,IAAMC,EAAS,CACX,CACIL,IAAK,2BACLM,MAAO,aACPC,MAAO,CAACP,IAAK,2BAA4BC,KAAM,UAC/CO,cAAe,EACfC,gBAAiB,IACjBC,YAAa,2BACbC,OAAO,GAEX,CACIX,IAAK,2BACLM,MAAO,WACPC,MAAO,CAACP,IAAK,2BAA4BC,KAAM,UAC/CO,cAAe,EACfC,gBAAiB,EACjBC,YAAa,2BACbC,OAAO,GAEX,CACIX,IAAK,2BACLM,MAAO,gBACPC,MAAO,CAACP,IAAK,2BAA4BC,KAAM,UAC/CO,cAAe,EACfC,gBAAiB,EACjBC,YAAa,2BACbC,OAAO,GAEX,CACIX,IAAK,2BACLM,MAAO,UACPC,MAAO,CAACP,IAAK,2BAA4BC,KAAM,YAC/CO,cAAe,EACfC,gBAAiB,EACjBC,YAAa,2BACbC,OAAO,GAEX,CACIX,IAAK,2BACLM,MAAO,cACPC,MAAO,CAACP,IAAK,2BAA4BC,KAAM,UAC/CO,cAAe,EACfC,gBAAiB,EACjBC,YAAa,2BACbC,OAAO,GAEX,CACIX,IAAK,2BACLM,MAAO,mBACPC,MAAO,CAACP,IAAK,2BAA4BC,KAAM,UAC/CO,cAAe,EACfC,gBAAiB,EACjBC,YAAa,2BACbC,OAAO,GAEX,CACIX,IAAK,2BACLM,MAAO,eACPC,MAAO,CAACP,IAAK,2BAA4BC,KAAM,SAC/CO,cAAe,EACfC,gBAAiB,EACjBC,YAAa,2BACbC,OAAO,IAaR,SAASC,EAAUC,GACtB,IAAIC,EAAYT,EAAOU,MAAK,SAAAC,GAAC,OAAIA,EAAEhB,MAAMa,EAAMb,QAAQ,GAWvD,OAVAc,EAAUR,MAAQO,EAAMP,MACxBQ,EAAUP,MAAQU,EAAiBF,MAAK,SAAAX,GAAC,OAAIA,EAAEJ,MAAQa,EAAMK,WAC7DJ,EAAUN,cAAgBK,EAAML,cAChCM,EAAUL,gBAAkBI,EAAMJ,gBAE7BK,EAAUd,MACXc,EAAUd,IAAMmB,KAAKC,MAAMC,WAC3BhB,EAAOiB,KAAKR,IAGTA,ECxFJ,SAASS,EAAS/B,EAAOgC,EAAYlD,GACxC,IAAMmD,GAAcD,EAAa,GAAKlD,EACtC,OAAOS,IAAES,GAAOkC,MAAMD,GAAYE,KAAKrD,GAAUsD,Q,YCuCtCC,E,4MAnCXC,UAAY,SAAAC,GACR,IAAMC,EAAU,eAAO,EAAK5D,MAAM4D,YAC9BA,EAAWD,OAASA,EACpBC,EAAWC,MAA8B,QAArBD,EAAWC,MAAmB,OAAS,OAE3DD,EAAWD,KAAOA,EAClBC,EAAWC,MAAQ,OAEvB,EAAK7D,MAAM8D,OAAOF,I,EAItBG,eAAiB,SAAAC,GAAW,IAChBJ,EAAe,EAAK5D,MAApB4D,WACR,OAAII,EAAOL,MAAQ,EAAK3D,MAAM4D,WAAWD,KAAa,KAC7B,QAArBC,EAAWC,MAAwB,uBAAGhD,UAAU,qBAC7C,uBAAGA,UAAU,qB,uDAId,IAAD,OACL,OAAQ,+BACJ,4BACMoD,KAAKjE,MAAMkE,QAAQpD,KAAI,SAAAkD,GAAM,OAC/B,wBACInD,UAAU,YACVG,IAAKgD,EAAOL,MAAQK,EAAOhD,IAC3BC,QAAS,kBAAM,EAAKyC,UAAUM,EAAOL,QAC/BK,EAAOG,MAJjB,IAI0B,EAAKJ,eAAeC,a,GA7BpCI,aC2BXC,E,4MA9BXC,WAAa,SAAC7C,EAAMuC,GAChB,OAAIA,EAAOO,QAAgBP,EAAOO,QAAQ9C,GAE/Bd,IAAE6D,IAAI/C,EAAMuC,EAAOL,O,EAKlCc,UAAY,SAAChD,EAAMuC,GACf,OAAOvC,EAAKG,KAAOoC,EAAOL,MAAQK,EAAOhD,M,uDAKnC,IAAD,SACmBiD,KAAKjE,MAAtB0E,EADF,EACEA,KAAMR,EADR,EACQA,QAEb,OAAQ,+BACHQ,EAAK5D,KAAI,SAAAW,GAAI,OACV,wBAAIT,IAAKS,EAAKG,KACTsC,EAAQpD,KAAI,SAAAkD,GAAM,OACf,wBAAIhD,IAAK,EAAKyD,UAAUhD,EAAMuC,IAAU,EAAKM,WAAW7C,EAAMuC,gB,GAtB9DI,aCYTO,EAXD,SAAC,GAA0C,IAAxCT,EAAuC,EAAvCA,QAASN,EAA8B,EAA9BA,WAAYE,EAAkB,EAAlBA,OAAQY,EAAU,EAAVA,KAC1C,OAEI,2BAAO7D,UAAU,SACb,kBAAC,EAAD,CAAaqD,QAASA,EAASN,WAAYA,EAAYE,OAAUA,IACjE,kBAAC,EAAD,CAAWI,QAASA,EAASQ,KAAMA,MCQhCE,EAZF,SAAC5E,GAEV,IAAI6E,EAAU,cAEX,OADE7E,EAAMuC,QAAOsC,GAAW,MAClB,uBACH5D,QAASjB,EAAMiB,QACfJ,UAAWgE,EACXC,cAAY,UC4BTC,E,4MA/BXb,QAAU,CACN,CAAEP,KAAM,QACNQ,MAAO,QACPI,QAAS,SAAA9B,GAAK,OAAI,kBAACuC,EAAA,EAAD,CAAMC,GAAE,kBAAaxC,EAAMb,MAAQa,EAAMP,SAC7D,CAAEyB,KAAM,aAAcQ,MAAO,SAC7B,CAAER,KAAM,gBAAiBQ,MAAO,SAChC,CAAER,KAAM,kBAAmBQ,MAAO,QAClC,CAAEnD,IAAK,OAAQuD,QAAS,SAAA9B,GAAK,OAAI,kBAAC,EAAD,CAAMF,MAAOE,EAAMF,MAAOtB,QAAS,kBAAM,EAAKjB,MAAMkF,OAAOzC,QAC5F,CAAEzB,IAAK,SACPuD,QAAS,SAAA9B,GAAK,OACV,4BACIxB,QAAS,kBAAM,EAAKjB,MAAMmF,SAAS1C,IACnC5B,UAAU,yBAFd,a,uDAME,IAAD,EACkCoD,KAAKjE,MAApCiC,EADH,EACGA,OAAQ6B,EADX,EACWA,OAAQF,EADnB,EACmBA,WAExB,OACI,kBAAC,EAAD,CACIM,QAASD,KAAKC,QACdQ,KAAMzC,EACN2B,WAAYA,EACZE,OAAQA,Q,GA1BEM,aCoGXnC,E,4MAjGXmD,MAAQ,CACJnD,OAAQ,GACRN,OAAQ,GACRxB,YAAa,EACbD,SAAU,EACV0D,WAAY,CAACD,KAAM,QAASE,MAAO,Q,EAUvCwB,aAAe,SAAC5C,GACV,IAAMR,EAAS,EAAKmD,MAAMnD,OAAOF,QAAO,SAAAa,GAAC,OAAIA,EAAEhB,MAAQa,EAAMb,OAC7D,EAAK0D,SAAU,CAACrD,Y,EAGtBsD,WAAa,SAAC9C,GACV,IAAMR,EAAM,YAAO,EAAKmD,MAAMnD,QACxBuD,EAAQvD,EAAOwD,QAAQhD,GAC7BR,EAAOuD,GAAP,eAAoBvD,EAAOuD,IAC3BvD,EAAOuD,GAAOjD,OAASN,EAAOuD,GAAOjD,MACrC,EAAK+C,SAAS,CAAErD,Y,EAIlByD,iBAAmB,SAAA3E,GACf,EAAKuE,SAAS,CAAEnF,YAAaY,K,EAGjC4E,kBAAoB,SAAAxD,GAClB,EAAKmD,SAAS,CAAEM,cAAezD,EAAOhC,YAAa,K,EAGrD0F,WAAa,SAAAjC,GACX,EAAK0B,SAAS,CAAE1B,gB,EAGlBkC,aAAe,WAAO,IAAD,EAKI,EAAKV,MAJrBlF,EADY,EACZA,SACLC,EAFiB,EAEjBA,YACAyD,EAHiB,EAGjBA,WACAgC,EAJiB,EAIjBA,cACQG,EALS,EAKjB9D,OAEI+D,EAAWJ,GAAiBA,EAAchE,IAC9CmE,EAAUhE,QAAO,SAAAa,GAAC,OAAIA,EAAET,MAAMP,MAAQgE,EAAchE,OACpDmE,EAIG9D,EAASkB,EAFAxC,IAAEsF,QAAQD,EAAU,CAACpC,EAAWD,MAAO,CAACC,EAAWC,QAElC1D,EAAaD,GAE7C,MAAO,CAAEgG,WAAYF,EAASG,OAAQzB,KAAMzC,I,kEA/CzC,IAAMN,EAAM,CAAI,CAACC,IAAK,GAAIC,KAAM,eAApB,mBAAuCC,MACnDmC,KAAKqB,SAAS,CAAErD,OPmDfA,EOlDeN,a,+BAiDZ,IACSyE,EAASnC,KAAKmB,MAAMnD,OAA5BkE,OADF,EAEuClC,KAAKmB,MAA1ClF,EAFF,EAEEA,SAAUC,EAFZ,EAEYA,YAAayD,EAFzB,EAEyBA,WAE9B,GAAc,IAAVwC,EAAa,OAAQ,mEAJpB,MAMgCnC,KAAK6B,eAAlCI,EANH,EAMGA,WAAkBjE,EANrB,EAMeyC,KAEpB,OACA,yBAAK7D,UAAU,OACX,yBAAKA,UAAU,SACX,kBAAC,EAAD,CACIO,MAAO6C,KAAKmB,MAAMzD,OAClBJ,aAAgB0C,KAAKmB,MAAMQ,cAC3BpE,aAAcyC,KAAK0B,qBAG3B,yBAAK9E,UAAU,OACX,sCAAYqF,EAAZ,qBACA,kBAAC,EAAD,CACQjE,OAAQA,EACR2B,WAAYA,EACZsB,OAAQjB,KAAKsB,WACbJ,SAAUlB,KAAKoB,aACfvB,OAAQG,KAAK4B,aAErB,kBAAC,EAAD,CAAY5F,WAAYiG,EACZhG,SAAUA,EACVC,YAAaA,EACbC,aAAc6D,KAAKyB,yB,GA1F1BtB,a,gCC0BNiC,EAhCD,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,KAAMzE,EAAyC,EAAzCA,KAAM0E,EAAmC,EAAnCA,MAAO/C,EAA4B,EAA5BA,MAAOgD,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAC9C,OACI,yBAAK5F,UAAU,cACf,2BAAO6F,QAAS7E,GAAO0E,GACvB,2BACI/C,MAAOA,EACPiD,SAAUA,EACV5E,KAAMA,EAEN8E,GAAI9E,EACJyE,KAAMA,EACNzF,UAAU,iBACT2F,GAAS,yBAAK3F,UAAU,sBAAsB2F,K,QCI5CI,EAjBA,SAAC,GAA6C,IAA3C/E,EAA0C,EAA1CA,KAAM0E,EAAoC,EAApCA,MAAOM,EAA6B,EAA7BA,QAASL,EAAoB,EAApBA,MAAUM,EAAU,kDACxD,OACI,yBAAKjG,UAAU,cACf,2BAAO6F,QAAS7E,GAAO0E,GACvB,0CAAQ1E,KAAMA,EAAM8E,GAAI9E,GAAUiF,EAAlC,CAAwCjG,UAAU,iBAC9C,4BAAQ2C,MAAM,KACbqD,EAAQ/F,KAAI,SAAAiG,GAAM,OACf,4BAAQ/F,IAAK+F,EAAOnF,IAAK4B,MAAOuD,EAAOnF,KAClCmF,EAAOlF,UAInB2E,GAAS,yBAAK3F,UAAU,sBAAsB2F,KCmFxCQ,E,4MA3FX5B,MAAQ,CACJV,KAAM,GACNuC,OAAQ,I,EAGZC,SAAW,WACP,IACQV,EAAUW,IAAID,SAAS,EAAK9B,MAAMV,KAAM,EAAK0C,OADrC,CAACC,YAAY,IACrBb,MAEP,GADDnG,QAAQC,IAAI,cAAekG,IACrBA,EAAO,OAAO,KAEpB,IANa,EAMPS,EAAS,GANF,cAOIT,EAAMc,SAPV,IAOb,gCAAS7F,EAAT,QACIwF,EAAOxF,EAAKkC,KAAK,IAAMlC,EAAK8F,SARnB,8BAUb,OAAON,G,EAIXO,iBAAmB,YAAqB,IAAlB3F,EAAiB,EAAjBA,KAAM2B,EAAW,EAAXA,MAClBiE,EAAG,eAAK5F,EAAO2B,GACf4D,EAAM,eAAMvF,EAAO,EAAKuF,OAAOvF,IAC9B2E,EAASW,IAAID,SAASO,EAAKL,GAA3BZ,MACP,OAAOA,EAAQA,EAAMc,QAAQ,GAAGC,QAAU,M,EAI9CG,aAAe,SAAAC,GACXA,EAAEC,iBAEF,IAAMX,EAAS,EAAKC,WACpB,EAAK5B,SAAS,CAAE2B,OAAQA,GAAU,KAC9BA,GAEL,EAAKY,Y,EAGRC,aAAe,YAA8B,IAAZC,EAAW,EAA1BC,cACRf,EAAM,eAAO,EAAK7B,MAAM6B,QACxBgB,EAAe,EAAKT,iBAAiBO,GACvCE,EAAchB,EAAOc,EAAMlG,MAAQoG,SAC3BhB,EAAOc,EAAMlG,MAEzB,IAAM6C,EAAI,eAAO,EAAKU,MAAMV,MAC5BA,EAAKqD,EAAMlG,MAAQkG,EAAMvE,MACzB,EAAK8B,SAAS,CAAEZ,OAAMuC,Y,2DAGbV,GACT,OAAQ,4BACA2B,SAAUjE,KAAKiD,WACfrG,UAAU,mBAAmB0F,K,mCAI5B1E,EAAM0E,EAAOM,GAAU,IAAD,EACN5C,KAAKmB,MAAtBV,EADuB,EACvBA,KAAMuC,EADiB,EACjBA,OAEd,OACI,kBAAC,EAAD,CACIpF,KAAMA,EACN2B,MAAOkB,EAAK7C,GACZ0E,MAAOA,EACPM,QAASA,EACTJ,SAAUxC,KAAK6D,aACftB,MAAOS,EAAOpF,O,kCAMdA,EAAM0E,GAAqB,IAAdD,EAAa,uDAAR,OAAQ,EACVrC,KAAKmB,MAAtBV,EAD2B,EAC3BA,KAAMuC,EADqB,EACrBA,OAEb,OAAO,kBAAC,EAAD,CACPX,KAAMA,EACNzE,KAAMA,EACN2B,MAAOkB,EAAK7C,GACZ0E,MAAQA,EACRE,SAAUxC,KAAK6D,aACftB,MAAOS,EAAOpF,S,GAjFHuC,aCwEJ+D,E,4MArEX/C,MAAQ,CACJV,KAAM,CACExC,MAAO,GACPY,QAAS,GACTV,cAAe,GACfC,gBAAiB,IACzBV,OAAQ,GACRsF,OAAQ,I,EAGZG,OAAS,CACLxF,IAAKuF,IAAIiB,SACTlG,MAAOiF,IAAIiB,SAASC,WAAW9B,MAAM,SACrCzD,QAASqE,IAAIiB,SAASC,WAAW9B,MAAM,SACvCnE,cAAe+E,IAAImB,SAASD,WAAWE,IAAI,GAAGC,IAAI,KAAKjC,MAAM,mBAC7DlE,gBAAiB8E,IAAImB,SAASD,WAAWE,IAAI,GAAGC,IAAI,IAAIjC,MAAM,sB,EA2BlEsB,SAAW,WACPrF,EAAU,EAAK4C,MAAMV,MACrB,EAAK1E,MAAMyI,QAAQvF,KAAK,WACxB7C,QAAQC,IAAK,c,kEA1Bb,IAAMqB,EAASG,IACfmC,KAAKqB,SAAS,CAAE3D,WAEhB,IAAM+G,EAAUzE,KAAKjE,MAAM2I,MAAMC,OAAOjC,GACxC,GAAgB,QAAZ+B,EAAJ,CAEA,IXyCiB/B,EWzCXlE,GXyCWkE,EWzCM+B,EX0CpBzG,EAAOU,MAAK,SAAAC,GAAC,OAAIA,EAAEhB,MAAM+E,MWzC5B,IAAKlE,EAAO,OAAOwB,KAAKjE,MAAMyI,QAAQI,QAAQ,cAE9C5E,KAAKqB,SAAS,CAAEZ,KAAMT,KAAK6E,eAAerG,Q,qCAG/BA,GACX,MAAO,CACHb,IAAKa,EAAMb,IACXM,MAAOO,EAAMP,MACbY,QAASL,EAAMN,MAAMP,IACrBQ,cAAeK,EAAML,cACrBC,gBAAiBI,EAAMJ,mB,+BAiB3B,OACA,6BACI,0CACA,0BAAM0G,SAAU9E,KAAKyD,cAChBzD,KAAK+E,YAAY,QAAS,SAC1B/E,KAAKgF,aAAa,UAAW,QAAShF,KAAKmB,MAAMzD,QACjDsC,KAAK+E,YAAY,gBAAiB,kBAAmB,UACrD/E,KAAK+E,YAAY,kBAAmB,QACpC/E,KAAKiF,aAAa,c,GA/DXlC,GCDTmC,EAJG,WACd,OAAO,0CCSIC,EATC,WAEZ,OACI,6BACI,yCCKGC,EATE,WAEb,OACI,6BACI,2C,QC8CGC,EAlDA,WACX,OAEI,yBAAKzI,UAAU,iDACb,kBAACmE,EAAA,EAAD,CAAMnE,UAAU,eAAeoE,GAAG,KAAlC,SAGA,4BACEpE,UAAU,iBACVyF,KAAK,SACLiD,cAAY,WACZC,cAAY,aACZC,gBAAc,YACdC,gBAAc,QACdC,aAAW,qBACX,0BAAM9I,UAAU,yBAElB,yBAAKA,UAAU,2BAA2B8F,GAAG,aAC3C,wBAAI9F,UAAU,cACZ,wBAAIA,UAAU,mBACZ,kBAAC+I,EAAA,EAAD,CAAS/I,UAAU,WAAWoE,GAAG,WAAjC,UACW,0BAAMpE,UAAU,WAAhB,eAGb,wBAAIA,UAAU,YACZ,kBAAC+I,EAAA,EAAD,CAAS/I,UAAU,WAAWoE,GAAG,cAAjC,cAIF,wBAAIpE,UAAU,YACZ,kBAAC+I,EAAA,EAAD,CAAS/I,UAAU,WAAWoE,GAAG,YAAjC,YAIF,wBAAIpE,UAAU,YACZ,kBAAC+I,EAAA,EAAD,CAAS/I,UAAU,WAAWoE,GAAG,UAAjC,UAIF,wBAAIpE,UAAU,YACZ,kBAAC+I,EAAA,EAAD,CAAS/I,UAAU,WAAWoE,GAAG,aAAjC,iBCJD4E,E,4MAlCXzE,MAAQ,CACJV,KAAM,CAACoF,SAAU,GAAIC,SAAU,IAC/B9C,OAAQ,I,EAGZG,OAAS,CACL0C,SAAU3C,IAAIiB,SAASC,WAAW9B,MAAM,YACxCwD,SAAU5C,IAAIiB,SAASC,WAAW9B,MAAM,a,EAI5CsB,SAAW,WACPxH,QAAQC,IAAK,c,uDAKP,IAAD,EAEoB2D,KAAKmB,MAFzB,EAEGV,KAFH,EAESuC,OAEd,OACA,6BACI,0CACA,0BAAM8B,SAAU9E,KAAKyD,cAChBzD,KAAK+E,YAAY,WAAY,YAC7B/E,KAAK+E,YAAY,WAAY,WAAY,YACzC/E,KAAKiF,aAAa,e,GA5BXlC,GCqCTgD,E,4MApCX5E,MAAQ,CACJV,KAAM,CAACoF,SAAU,GAAIC,SAAU,GAAIlI,KAAM,IACzCoF,OAAQ,I,EAGZG,OAAS,CACL0C,SAAU3C,IAAIiB,SAAS6B,QAAQ5B,WAAW9B,MAAM,YAChDwD,SAAU5C,IAAIiB,SAASC,WAAWE,IAAI,GAAGhC,MAAM,YAC/C1E,KAAMsF,IAAIiB,SAAS7B,MAAM,S,EAI7BsB,SAAW,WACPxH,QAAQC,IAAK,c,uDAKP,IAAD,EAEoB2D,KAAKmB,MAFzB,EAEGV,KAFH,EAESuC,OAEd,OACA,6BACI,6CACA,0BAAM8B,SAAU9E,KAAKyD,cAChBzD,KAAK+E,YAAY,WAAY,YAC7B/E,KAAK+E,YAAY,WAAY,WAAY,YACzC/E,KAAK+E,YAAY,OAAQ,QACzB/E,KAAKiF,aAAa,kB,GA9BRlC,GC8BZkD,G,6KAlBX,OAAQ,kBAAC,IAAMC,SAAP,KACJ,kBAAC,EAAD,MACA,0BAAMC,KAAK,OAAOvJ,UAAU,aAC1B,kBAACwJ,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAO3G,KAAK,SAAS4G,UAAWV,IAChC,kBAACS,EAAA,EAAD,CAAO3G,KAAK,YAAY4G,UAAWP,IACnC,kBAACM,EAAA,EAAD,CAAO3G,KAAK,cAAc4G,UAAWpC,IACrC,kBAACmC,EAAA,EAAD,CAAO3G,KAAK,UAAU4G,UAAWC,IACjC,kBAACF,EAAA,EAAD,CAAO3G,KAAK,aAAa4G,UAAWpB,IACpC,kBAACmB,EAAA,EAAD,CAAO3G,KAAK,WAAW4G,UAAWnB,IAClC,kBAACkB,EAAA,EAAD,CAAO3G,KAAK,aAAa4G,UAAWlB,IACpC,kBAACoB,EAAA,EAAD,CAAUC,KAAM,IAAIC,OAAK,EAAC1F,GAAG,YAC7B,kBAACwF,EAAA,EAAD,CAAUxF,GAAG,sB,GAdPb,cCFEwG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASpC,MACvB,2D,YCTNqC,IAASC,OAEL,kBAACC,EAAA,EAAD,KACE,kBAAC,EAAD,OAGJC,SAASC,eAAe,SDoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAnF,GACLnG,QAAQmG,MAAMA,EAAMe,c","file":"static/js/main.fa48999f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport _ from 'lodash';\n\nconst Pagination = props => {\n    const {itemsCount, pageSize, currentPage, onPageChange} = props;\n    console.log (currentPage);\n\n    const pagesCount = Math.ceil(itemsCount / pageSize);\n    if (pagesCount === 1) return null;\n    const pages = _.range(1, pagesCount + 1);\n\n    return (\n    <nav>\n        <ul className=\"pagination\">\n            {pages.map(page => (\n            <li key={page} className={ page === currentPage ? 'page-item active' : 'page-item'}>\n                <a onClick={() => onPageChange(page)} className=\"page-link\" href=\"#\">{page}</a></li>))}\n        </ul>\n    </nav>);\n}\n\nPagination.propTypes = {\n    itemsCount: PropTypes.number.isRequired,\n    pageSize:PropTypes.number.isRequired,\n    currentPage: PropTypes.number.isRequired,\n    onPageChange: PropTypes.func.isRequired\n};\n\nexport default Pagination;","import React, { Component } from 'react';\n\nconst ListGroup = (props) => {\n    const { items, textProperty, valueProperty, selectedItem, onItemSelect } = props;\n\n    return (<ul className=\"list-group\">\n                {items.map(item => \n                    <li onClick={() => onItemSelect(item)}  \n                        key={item[valueProperty]} \n                        className={ item === selectedItem ? \"list-group-item active\" : \"list-group-item\"}>{item[textProperty]}\n                    </li>)}\n            </ul> );\n}\n\nListGroup.defaultProps = {\n    textProperty: \"name\",\n    valueProperty: \"_id\"\n};\n \nexport default ListGroup;\n\n\n","export const genres = [\n    {_id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    {_id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    {_id: \"5b21ca3eeb7f6fbccd471812\", name: \"Drama\" },\n    {_id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" }\n   \n];\n\nexport function getGenres() {\n    return genres.filter(g => g);\n}","\nimport * as genresAPI from \"./fakeGenreService\";\n\nconst movies = [\n    {\n        _id: \"5b21ca3eeb7f6fbccd471815\",\n        title: \"Terminator\",\n        genre: {_id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\"},\n        numberInStock: 6,\n        dailyRentalRate: 2.5,\n        publishDate: \"2018-01-03T19:04.28.809Z\",\n        liked: true\n    },\n    {\n        _id: \"5b21ca3eeb7f6fbccd471816\",\n        title: \"Die Hard\",\n        genre: {_id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\"},\n        numberInStock: 3,\n        dailyRentalRate: 5,\n        publishDate: \"2018-01-03T19:04.28.809Z\",\n        liked: false\n    },\n    {\n        _id: \"5b21ca3eeb7f6fbccd471817\",\n        title: \"Terminator II\",\n        genre: {_id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\"},\n        numberInStock: 8,\n        dailyRentalRate: 2,\n        publishDate: \"2018-01-03T19:04.28.809Z\",\n        liked: true\n    },\n    {\n        _id: \"5b21ca3eeb7f6fbccd471818\",\n        title: \"Get Out\",\n        genre: {_id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\"},\n        numberInStock: 8,\n        dailyRentalRate: 4,\n        publishDate: \"2017-01-03T19:04.28.809Z\",\n        liked: true\n    },\n    {\n        _id: \"5b21ca3eeb7f6fbccd471819\",\n        title: \"Caddy Shack\",\n        genre: {_id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\"},\n        numberInStock: 4,\n        dailyRentalRate: 1,\n        publishDate: \"2018-01-03T19:04.28.809Z\",\n        liked: false\n    },\n    {\n        _id: \"5b21ca3eeb7f6fbccd471820\",\n        title: \"It's Complicated\",\n        genre: {_id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\"},\n        numberInStock: 7,\n        dailyRentalRate: 3,\n        publishDate: \"2009-01-03T19:04.28.809Z\",\n        liked: true\n    }, \n    {\n        _id: \"5b21ca3eeb7f6fbccd471821\",\n        title: \"The Departed\",\n        genre: {_id: \"5b21ca3eeb7f6fbccd471812\", name: \"Drama\"},\n        numberInStock: 4,\n        dailyRentalRate: 1,\n        publishDate: \"2006-01-03T19:04.28.809Z\",\n        liked: true\n    }\n\n];\n\nexport function getMovies() {\n    return movies;\n}\n\nexport function getMovie(id) {\n    return movies.find(m => m._id===id);\n}\n\nexport function saveMovie(movie) {\n    let movieInDb = movies.find(m => m._id===movie._id) || {};\n    movieInDb.title = movie.title;\n    movieInDb.genre = genresAPI.genres.find(g => g._id === movie.genreId);\n    movieInDb.numberInStock = movie.numberInStock;\n    movieInDb.dailyRentalRate = movie.dailyRentalRate;\n\n    if (!movieInDb._id) {\n        movieInDb._id = Date.now().toString();\n        movies.push(movieInDb);\n    }\n\n    return movieInDb;\n}","import _ from 'lodash';\n\nexport function paginate(items, pageNumber, pageSize) {\n    const startIndex = (pageNumber - 1) * pageSize;\n    return _(items).slice(startIndex).take(pageSize).value();\n    //_.slice(itmes, startIndex);\n    //_.take();\n}","import React, { Component } from 'react';\n//import { checkPropTypes } from 'prop-types';\n\n// columns: array\n// sortColumn: object\n// onSort: function\n\nclass TableHeader extends Component {\n    raiseSort = path => {\n        const sortColumn = {...this.props.sortColumn};\n        if (sortColumn.path === path)\n            sortColumn.order = (sortColumn.order === 'asc') ? 'desc' : 'asc';\n        else {\n            sortColumn.path = path;\n            sortColumn.order = 'asc';\n        }\n        this.props.onSort(sortColumn);\n\n    };\n\n    renderSortIcon = column => {\n        const { sortColumn } = this.props;\n        if (column.path != this.props.sortColumn.path) return null;\n        if (sortColumn.order === 'asc') return <i className=\"fa fa-sort-asc  \"></i>\n        return <i className=\"fa fa-sort-desc\"></i>\n\n    };\n\n    render() { \n        return (<thead>\n            <tr>\n                { this.props.columns.map(column => (\n                <th \n                    className=\"clickable\"\n                    key={column.path || column.key}\n                    onClick={() => this.raiseSort(column.path)}>\n                        { column.lable } {this.renderSortIcon(column)}\n                </th>))}\n            </tr>\n        </thead>  );\n    }\n}\n \nexport default TableHeader;","import React, { Component } from 'react';\nimport _ from 'lodash';\n\nclass TableBody extends Component {\n    renderCell = (item, column) => {\n        if (column.content) return column.content(item);\n        else {\n            return _.get(item, column.path);\n        }\n\n    };\n\n    createKey = (item, column) => {\n        return item._id + (column.path || column.key);\n    \n    };\n\n\n    render() { \n        const {data, columns} = this.props;\n\n        return (<tbody>\n            {data.map(item => (\n                <tr key={item._id}>\n                    {columns.map(column => (\n                        <td key={this.createKey(item, column)}>{this.renderCell(item, column)}\n                        </td>                    \n                    ))}\n                </tr> \n            ))}\n        </tbody>  );\n    }\n}\n \nexport default TableBody;","import React from 'react';\nimport TableHeader from './tableHeader';\nimport TableBody from './tableBody';\n\nconst Table = ({ columns, sortColumn, onSort, data}) => {\n    return ( \n\n        <table className=\"table\">\n            <TableHeader columns={columns} sortColumn={sortColumn} onSort = {onSort}/>\n            <TableBody columns={columns} data={data} />\n         </table>   \n    );\n\n}\n \nexport default Table ;","import React, { Component } from 'react';\n\n// input: liked: boolean\n// output: onClick event\n// stateless functional component\nconst Like = (props) => {\n\n    let classes = \"fa fa-heart\";\n    if (!props.liked) classes += \"-o\";\n       return (<i \n            onClick={props.onClick} \n            className={classes} \n            aria-hidden=\"true\">\n            </i>  );    \n};\n\n \nexport default Like;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Table from './common/table';\nimport Like from './common/like';\n\nconst x = <Like></Like>;\n\nclass MoviesTable extends Component {\n   \n    columns = [\n        { path: 'title', \n          lable: 'Title', \n          content: movie => <Link to={`/movies/${movie._id}`}>{movie.title}</Link> },\n        { path: 'genre.name', lable: 'Genre' },\n        { path: 'numberInStock', lable: 'Stock' },\n        { path: 'dailyRentalRate', lable: 'Rate' },\n        { key: 'like', content: movie => <Like liked={movie.liked} onClick={() => this.props.onLike(movie)} />},\n        { key: 'delete',\n        content: movie =>\n            <button \n                onClick={() => this.props.onDelete(movie)} \n                className=\"btn btn-danger btn-sm\">Delete\n            </button>}\n    ]\n\n    render() {\n        const { movies, onSort, sortColumn } = this.props;\n\n        return (\n            <Table \n                columns={this.columns} \n                data={movies} \n                sortColumn={sortColumn} \n                onSort={onSort}\n            />\n        );\n        \n        }\n    }\n\nexport default MoviesTable;","import React, { Component } from 'react';\nimport Pagination from './common/pagination';\nimport ListGroup from './common/listGRoup';\nimport { getMovies } from '../servicez/fakeMovieService';\nimport { getGenres } from '../servicez/fakeGenreService';\nimport { paginate } from '../utils/paginate';\nimport MoviesTable from './moviesTable';\nimport _ from 'lodash';\n\nclass movies extends Component {\n    state = {\n        movies: [],\n        genres: [],  //should add to component didMoutn\n        currentPage: 1,\n        pageSize: 4, \n        sortColumn: {path: 'title', order: 'asc' }\n      };\n\n      componentDidMount() {\n          const genres = [{_id: \"\", name: 'All Genres' }, ...getGenres()]; //add all genres to genres list\n          this.setState({ movies: getMovies(),\n                          genres\n        })\n      }\n\n    handleDelete = (movie) => {\n          const movies = this.state.movies.filter(m => m._id !== movie._id);\n          this.setState( {movies});\n      }\n\n    handleLike = (movie) => {\n        const movies = [...this.state.movies];\n        const index = movies.indexOf(movie);\n        movies[index] = {...movies[index] };\n        movies[index].liked = !movies[index].liked;\n        this.setState({ movies });\n\n      }\n\n      handlePageChange = page => {\n          this.setState({ currentPage: page});\n      }\n\n      handleGenreSelect = genre => {\n        this.setState({ selectedGenre: genre, currentPage: 1});\n      }\n\n      handleSort = sortColumn => {\n        this.setState({ sortColumn});\n      }\n\n      getPagedDate = () => {\n        const {pageSize, \n          currentPage, \n          sortColumn,\n          selectedGenre, \n          movies: allMovies} = this.state;\n\n        const filtered = selectedGenre && selectedGenre._id\n        ? allMovies.filter(m => m.genre._id === selectedGenre._id) \n        : allMovies;\n\n       const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n       \n       const movies = paginate(sorted, currentPage, pageSize);\n\n       return { totalCount: filtered.length, data: movies };\n\n      };\n\n    render() { \n        const {length: count} = this.state.movies;\n        const {pageSize, currentPage, sortColumn} = this.state;\n\n        if (count === 0) return (<p>There are no movies in the database.</p>);\n\n        const { totalCount, data: movies } = this.getPagedDate();\n        \n        return ( \n        <div className=\"row\">\n            <div className=\"col-3\">\n                <ListGroup \n                    items={this.state.genres} \n                    selectedItem = {this.state.selectedGenre}\n                    onItemSelect={this.handleGenreSelect}\n                />\n            </div>\n            <div className=\"col\">\n                <p>Showing {totalCount} in the database.</p>        \n                <MoviesTable \n                        movies={movies} \n                        sortColumn={sortColumn}\n                        onLike={this.handleLike} \n                        onDelete={this.handleDelete}\n                        onSort={this.handleSort}\n                        />\n                <Pagination itemsCount={totalCount} \n                            pageSize={pageSize} \n                            currentPage={currentPage}\n                            onPageChange={this.handlePageChange}/>\n        \n            </div>            \n        </div>\n      );\n    }\n}\n \nexport default movies;","import React from 'react';\nimport { checkPropTypes } from 'prop-types';\n\nconst Input = ({ type, name, label, value, error, onChange}) => {\n    return(\n        <div className=\"form-group\">\n        <label htmlFor={name}>{label}</label>\n        <input \n            value={value}\n            onChange={onChange}\n            name={name}\n           // ref={this.username} \n            id={name} \n            type={type} \n            className=\"form-control\"/>\n            {error && <div className=\"alert alert-danger\">{error}</div>} \n    </div>\n    );\n};\n\n// const Input = ({name, label, error, ...rest}) => {  // example using rest - avoid passing all params \n//     return(\n//         <div className=\"form-group\">\n//         <label htmlFor={name}>{label}</label>\n//         <input \n//             {...rest}\n//             name={name} \n//             id={name} \n//             className=\"form-control\"/>\n//             {error && <div className=\"alert alert-danger\">{error}</div>} \n//     </div>\n//     );\n// };\n\n\nexport default Input;\n\n","import React from 'react';\n\nconst Select = ({ name, label, options, error, ...rest}) => {\n    return(\n        <div className=\"form-group\">\n        <label htmlFor={name}>{label}</label>\n        <select name={name} id={name} {...rest} className=\"form-control\">\n            <option value=\"\" />\n            {options.map(option=>(\n                <option key={option._id} value={option._id}>\n                    {option.name}\n                </option>\n            ))}\n        </select>          \n        {error && <div className=\"alert alert-danger\">{error}</div>} \n    </div>\n    );\n};\n\nexport default Select;\n","import React, { Component } from 'react';\nimport Joi from 'joi-browser';\nimport Input from './input';\nimport Select from './select';\n\nclass Form extends Component {\n    state = {  \n        data: {},\n        errors: {}\n    };\n\n    validate = () => {\n        const options = {abortEarly: false};\n        const { error } = Joi.validate(this.state.data, this.schema, options);\n        console.log('joi result ', error);\n         if (!error) return null;\n\n        const errors = {};\n        for (let item of error.details)\n            errors[item.path[0]] = item.message;\n  \n        return errors;\n    \n    };\n\n    validateProperty = ({ name, value}) => {\n        const obj = {[name]: value};\n        const schema = { [name]: this.schema[name] };    \n        const {error} = Joi.validate(obj, schema);\n        return error ? error.details[0].message : null;      \n\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n\n        const errors = this.validate();\n        this.setState({ errors: errors || {} }); // always set to object\n        if (errors) return;\n      \n       this.doSubmit();\n    }\n\n    handleChange = ({ currentTarget: input}) => {\n        const errors = {...this.state.errors};\n        const errorMessage = this.validateProperty(input);\n        if (errorMessage) errors[input.name] = errorMessage;\n        else delete errors[input.name];\n\n        const data = {...this.state.data};\n        data[input.name] = input.value;\n        this.setState({ data, errors });\n    }\n\n    renderButton(label) {\n        return (<button \n                disabled={this.validate()}\n                className=\"btn btn-primary\">{label}\n                </button>);\n    }\n\n    renderSelect(name, label, options) {\n        const { data, errors } = this.state;\n        \n        return (\n            <Select\n                name={name}\n                value={data[name]}\n                label={label}\n                options={options}\n                onChange={this.handleChange}\n                error={errors[name]}\n            />\n\n        )\n    }\n\n    renderInput(name, label, type='text') { //text by default\n        const {data, errors } = this.state;\n    \n        return(<Input \n        type={type}\n        name={name} \n        value={data[name]} \n        label= {label}\n        onChange={this.handleChange}\n        error={errors[name]}/>)\n    }\n\n\n\n\n    // render() { \n    //     return (  );\n    // }\n}\n \nexport default Form;\n\n","import React, { Component } from 'react';\nimport Joi from 'joi-browser';\nimport Form from './common/form';\nimport {getMovie, saveMovie} from \"../servicez/fakeMovieService\";\nimport {getGenres} from \"../servicez/fakeGenreService\";\n\n\nclass MovieForm extends Form {\n    state = {\n        data: {\n                title: \"\", \n                genreId: \"\", \n                numberInStock: \"\", \n                dailyRentalRate: \"\"}, \n        genres: [],\n        errors: {}\n    };\n\n    schema = {\n        _id: Joi.string(),\n        title: Joi.string().required().label(\"Title\"),\n        genreId: Joi.string().required().label(\"Genre\"),\n        numberInStock: Joi.number().required().min(0).max(100).label(\"Number in Stock\"),\n        dailyRentalRate: Joi.number().required().min(0).max(10).label(\"Daily Rental Rate\")\n    }\n\n    componentDidMount() {\n        const genres = getGenres();\n        this.setState({ genres});\n\n        const movieId = this.props.match.params.id;\n        if (movieId === \"new\") return;\n\n        const movie = getMovie(movieId);\n        if (!movie) return this.props.history.replace(\"/not-found\");\n\n        this.setState({ data: this.mapToViewModel(movie)});\n    }\n\n    mapToViewModel(movie){\n        return {\n            _id: movie._id,\n            title: movie.title,\n            genreId: movie.genre._id,\n            numberInStock: movie.numberInStock,\n            dailyRentalRate: movie.dailyRentalRate\n        };\n    }\n\n\n    doSubmit = () => {\n        saveMovie(this.state.data);\n        this.props.history.push(\"/movies\");\n        console.log ('submitted');\n\n    };\n\n \n    render() { \n\n       // const { data, errors } = this.state;\n\n        return (\n        <div>\n            <h1>Movie Form</h1>\n            <form onSubmit={this.handleSubmit}>\n                {this.renderInput('title', 'Title')}\n                {this.renderSelect('genreId', 'Genre', this.state.genres)}            \n                {this.renderInput('numberInStock', 'Number In Stock', \"number\")}\n                {this.renderInput('dailyRentalRate', 'Rate')}\n                {this.renderButton('Save')}\n     \n            </form>\n        </div>  );\n    }\n}\n \nexport default MovieForm;","import React from 'react';\n\nconst Customers = () => {\n    return <h1>Customers</h1>\n}\n\nexport default Customers;","import React, { Component } from 'react';\n\n\nconst Rentals = () => {\n    \n    return (\n        <div>\n            <h1>Rentals</h1>           \n        </div>\n    );\n};\n\nexport default Rentals;","import React, { Component } from 'react';\n\n\nconst NotFound = () => {\n    \n    return (\n        <div>\n            <h1>Not Found</h1>           \n        </div>\n    );\n};\n\nexport default NotFound;","import React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\n\nconst NavBar = () => {\n    return (\n\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n          <Link className=\"navbar-brand\" to=\"#\">\n              Vidly\n          </Link>\n          <button \n            className=\"navbar-toggler\" \n            type=\"button\" \n            data-toggle=\"collapse\" \n            data-target=\"#navbarNav\" \n            aria-controls=\"navbarNav\" \n            aria-expanded=\"false\" \n            aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul className=\"navbar-nav\">\n              <li className=\"nav-item active\">\n                <NavLink className=\"nav-link\" to=\"/movies\">\n                    Movies <span className=\"sr-only\">(current)</span>\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink className=\"nav-link\" to=\"/customers\">\n                    Customers\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink className=\"nav-link\" to=\"/rentals\">\n                    Rentals\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink className=\"nav-link\" to=\"/login\">\n                    Login\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink className=\"nav-link\" to=\"/register\">\n                    Register\n                </NavLink>\n              </li>\n \n            </ul>\n          </div>\n        </nav>);\n}\n\nexport default NavBar;\n","import React, { Component } from 'react';\nimport Joi from 'joi-browser';\nimport Form from './common/form';\n\nclass LoginForm extends Form {\n    state = {\n        data: {username: \"\", password: \"\"}, // needs to be initialized as it's 'conrtrolled'\n        errors: {}\n    };\n\n    schema = {\n        username: Joi.string().required().label(\"Username\"),\n        password: Joi.string().required().label(\"Password\")\n    }\n\n\n    doSubmit = () => {\n        console.log ('submitted');\n\n    }\n\n \n    render() { \n\n        const { data, errors } = this.state;\n\n        return (\n        <div>\n            <h1>Login form</h1>\n            <form onSubmit={this.handleSubmit}>\n                {this.renderInput('username', 'Username')}\n                {this.renderInput('password', 'Password', 'password')}            \n                {this.renderButton('Login')}\n     \n            </form>\n        </div>  );\n    }\n}\n \nexport default LoginForm;","import React, { Component } from 'react';\nimport Joi from 'joi-browser';\nimport Form from './common/form';\n\nclass RegisterForm extends Form {\n    state = {\n        data: {username: \"\", password: \"\", name: \"\"}, // needs to be initialized as it's 'conrtrolled'\n        errors: {}\n    };\n\n    schema = {\n        username: Joi.string().email().required().label(\"Username\"),\n        password: Joi.string().required().min(5).label(\"Password\"),\n        name: Joi.string().label(\"Name\")\n    }\n\n\n    doSubmit = () => {\n        console.log ('submitted');\n\n    }\n\n \n    render() { \n\n        const { data, errors } = this.state;\n\n        return (\n        <div>\n            <h1>Register form</h1>\n            <form onSubmit={this.handleSubmit}>\n                {this.renderInput('username', 'Username')}\n                {this.renderInput('password', 'Password', 'password')}     \n                {this.renderInput('name', 'Name')}         \n                {this.renderButton('Register')}\n     \n            </form>\n        </div>  );\n    }\n}\n \nexport default RegisterForm;","\nimport React, { Component } from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport Movies from './components/movies';\nimport MovieForm from './components/movieForm';\nimport Customers from './components/customers';\nimport Rentals from './components/rentals';\nimport NotFound from './components/notFound';\nimport NavBar from './components/navBar';\nimport LoginForm from './components/loginForm';\nimport RegisterForm from './components/registerForm';\nimport './App.css';\n\n\nclass App extends Component {\n  render() {\n    return (<React.Fragment>\n        <NavBar />\n        <main role=\"main\" className=\"container\">\n          <Switch>\n            <Route path=\"/login\" component={LoginForm}></Route>\n            <Route path=\"/register\" component={RegisterForm}></Route>\n            <Route path=\"/movies/:id\" component={MovieForm}></Route>\n            <Route path=\"/movies\" component={Movies}></Route>\n            <Route path=\"/customers\" component={Customers}></Route>\n            <Route path=\"/rentals\" component={Rentals}></Route>\n            <Route path=\"/not-found\" component={NotFound}></Route>\n            <Redirect from =\"/\" exact to=\"/movies\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </main>\n      </React.Fragment>);\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}